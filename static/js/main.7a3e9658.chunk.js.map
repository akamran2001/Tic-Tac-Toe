{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","_super","call","state","player","squares","Array","fill","gameOver","_this2","win","boardFull","filter","item","length","find","indices","_indices","slicedToArray","a","b","c","line","every","switchPlayer","setState","cell","_this3","getAttribute","setAttribute","map","index","parseInt","id","gameUpdate","audio","document","querySelector","paused","volume","play","getElementById","className","pause","concat","start","end","_this4","colors","from","keys","slice","num","react_default","createElement","key","onClick","e","target","clicked","String","_this5","gameOverMsg","playAudio","react_fontawesome_index_es","icon","faMusic","rows_fill","href","React","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App_App"],"mappings":"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","file":"static/js/main.7a3e9658.chunk.js","sourcesContent":["import { faMusic } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport React from \"react\";\r\nimport \"./App.css\";\r\nexport default class App extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      player: \"X\",\r\n      squares: Array(9).fill(\"\"),\r\n      gameOver: false,\r\n    };\r\n  }\r\n  gameUpdate() {\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    let win = false;\r\n    let boardFull =\r\n      this.state.squares.filter((item) => {\r\n        return item === \"\";\r\n      }).length === 0;\r\n    lines.find((indices) => {\r\n      const [a, b, c] = indices;\r\n      const line = [\r\n        this.state.squares[a],\r\n        this.state.squares[b],\r\n        this.state.squares[c],\r\n      ];\r\n      win = line.every((item) => {\r\n        return item === line[0] && line[0] !== \"\";\r\n      });\r\n      return win;\r\n    });\r\n    const switchPlayer = () => {\r\n      if (!this.state.gameOver) {\r\n        this.setState({ player: this.state.player === \"X\" ? \"O\" : \"X\" });\r\n      }\r\n    };\r\n    if (boardFull && !win) {\r\n      this.setState({ player: \"Tie\" }, switchPlayer);\r\n    }\r\n    this.setState({ gameOver: win || boardFull }, switchPlayer);\r\n  }\r\n\r\n  play(cell) {\r\n    const clicked = cell.getAttribute(\"clicked\");\r\n    if (clicked === \"false\" && this.state.gameOver !== true) {\r\n      cell.setAttribute(\"clicked\", \"true\");\r\n      this.setState(\r\n        {\r\n          squares: this.state.squares.map((item, index) => {\r\n            return index === parseInt(cell.id) ? this.state.player : item;\r\n          }),\r\n        },\r\n        this.gameUpdate\r\n      );\r\n    }\r\n  }\r\n\r\n  playAudio() {\r\n    const audio = document.querySelector(\"audio\");\r\n    if (audio.paused) {\r\n      audio.volume = 0.2;\r\n      audio.play();\r\n      document.getElementById(\"audio-msg\").className = \"invisible\";\r\n    } else {\r\n      audio.pause();\r\n      document.getElementById(\"audio-msg\").className = \"mono\";\r\n    }\r\n  }\r\n  gameOverMsg() {\r\n    return this.state.player === \"Tie\"\r\n      ? \"Tie\"\r\n      : `Winner:  ${this.state.player}`;\r\n  }\r\n  rows_fill(start, end) {\r\n    const colors = [\r\n      \"green\",\r\n      \"red\",\r\n      \"red\",\r\n      \"blue\",\r\n      \"green\",\r\n      \"red\",\r\n      \"blue\",\r\n      \"blue\",\r\n      \"green\",\r\n    ];\r\n    return Array.from(Array(10).keys())\r\n      .slice(start, end)\r\n      .map((num) => {\r\n        return (\r\n          <td\r\n            key={num}\r\n            className={colors[num]}\r\n            onClick={(e) => {\r\n              this.play(e.target);\r\n            }}\r\n            clicked={this.state.squares[num] === \"\" ? \"false\" : \"true\"}\r\n            id={String(num)}\r\n          >\r\n            <h1>{this.state.squares[num]}</h1>\r\n          </td>\r\n        );\r\n      });\r\n  }\r\n\r\n  render() {\r\n    const end = (\r\n      <div id=\"end\">\r\n        <h1>{this.gameOverMsg()}</h1>\r\n        <button\r\n          onClick={() => {\r\n            this.setState({\r\n              player: \"X\",\r\n              squares: Array(9).fill(\"\"),\r\n              gameOver: false,\r\n            });\r\n          }}\r\n        >\r\n          Play Again\r\n        </button>\r\n      </div>\r\n    );\r\n    return (\r\n      <div className=\"App\">\r\n        <div onClick={this.playAudio}>\r\n          <div className=\"header\">\r\n            <h1>Tic Tac Toe</h1>\r\n            <p>\r\n              <FontAwesomeIcon icon={faMusic} />\r\n            </p>\r\n          </div>\r\n          <p id=\"audio-msg\" className=\"mono\">\r\n            Click here to play music\r\n          </p>\r\n        </div>\r\n        <table id=\"board\">\r\n          <tbody>\r\n            <tr>{this.rows_fill(0, 3)}</tr>\r\n            <tr>{this.rows_fill(3, 6)}</tr>\r\n            <tr>{this.rows_fill(6, 9)}</tr>\r\n          </tbody>\r\n        </table>\r\n        <div id=\"bottom\">\r\n          {this.state.gameOver ? end : \"\"}\r\n          <h3 className=\"mono\">\r\n            Made by{\" \"}\r\n            <a href=\"https://github.com/akamran2001/Tic-Tac-Toe\">\r\n              Ahmed Kamran\r\n            </a>\r\n          </h3>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}