{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","props","_this","Object","classCallCheck","this","_super","call","state","player","board","document","getElementById","rows","Array","from","colorMap","map","tr","i","cells","cell","j","className","getAttribute","setAttribute","innerHTML","concat","next","setState","_this2","getElementsByTagName","index","id","String","addEventListener","e","play","target","colorBoard","cellAssign","react_default","a","createElement","React","Component","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App_App"],"mappings":"kNAEqBA,2DACnB,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAL,IACjBE,EAAAI,EAAAC,KAAAF,KAAMJ,IACDO,MAAQ,CACXC,OAAQ,KAHOP,gDAMnB,WACE,IAAMQ,EAAQC,SAASC,eAAe,SAChCC,EAAOC,MAAMC,KAAKL,EAAMG,MACxBG,EAAW,CACf,CAAC,MAAO,QAAS,QACjB,CAAC,QAAS,OAAQ,OAClB,CAAC,OAAQ,MAAO,UAElBH,EAAKI,IAAI,SAACC,EAAIC,GAMZ,OALaL,MAAMC,KAAKG,EAAGE,OACtBH,IAAI,SAACI,EAAMC,GAEd,OADAD,EAAKE,UAAYP,EAASG,GAAGG,GACtB,OAEF,2BAGX,SAAKD,EAAMZ,GAET,GAAgB,UADAY,EAAKG,aAAa,WACT,CACvBH,EAAKI,aAAa,UAAW,QAC7BJ,EAAKK,UAAL,OAAAC,OAAwBlB,EAAxB,SACA,IAAMmB,EAAkB,MAAXnB,EAAiB,IAAM,IACpCJ,KAAKwB,SAAS,CAAEpB,OAAQmB,+BAG5B,SAAWnB,GAAQ,IAAAqB,EAAAzB,KASjB,OARcS,MAAMC,KAAKJ,SAASoB,qBAAqB,OACjDd,IAAI,SAACI,EAAMW,GACfX,EAAKY,GAAKC,OAAOF,GACjBX,EAAKI,aAAa,UAAW,SAC7BJ,EAAKc,iBAAiB,QAAS,SAACC,GAC9BN,EAAKO,KAAKD,EAAEE,OAAQ7B,OAGjB,sCAET,WACEJ,KAAKkC,aACLlC,KAAKmC,WAAWnC,KAAKG,MAAMC,0CAE7B,WACEJ,KAAKmC,WAAWnC,KAAKG,MAAMC,8BAE7B,WACE,OACEgC,EAAAC,EAAAC,cAAA,OAAKpB,UAAU,OACbkB,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,SAAOV,GAAG,SACRQ,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIpB,UAAU,SACdkB,EAAAC,EAAAC,cAAA,MAAIpB,UAAU,SACdkB,EAAAC,EAAAC,cAAA,MAAIpB,UAAU,UAEhBkB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIpB,UAAU,SACdkB,EAAAC,EAAAC,cAAA,MAAIpB,UAAU,SACdkB,EAAAC,EAAAC,cAAA,MAAIpB,UAAU,UAEhBkB,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,MAAIpB,UAAU,SACdkB,EAAAC,EAAAC,cAAA,MAAIpB,UAAU,SACdkB,EAAAC,EAAAC,cAAA,MAAIpB,UAAU,oBAtEKqB,IAAMC,YCUxBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAb,EAAA,GAAAc,KAAAD,EAAAE,KAAA,UAAqBD,KAAK,SAAAE,GAAiD,IAA9CC,EAA8CD,EAA9CC,OAAQC,EAAsCF,EAAtCE,OAAQC,EAA8BH,EAA9BG,OAAQC,EAAsBJ,EAAtBI,OAAQC,EAAcL,EAAdK,QAC3DJ,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAOT,GACPU,EAAQV,MCDdW,IAASC,OACPlB,EAAAC,EAAAC,cAACF,EAAAC,EAAMkB,WAAP,KACEnB,EAAAC,EAAAC,cAACkB,EAAD,OAEFlD,SAASC,eAAe,SAM1BkC","file":"static/js/main.287cd768.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      player: \"x\",\n    };\n  }\n  colorBoard() {\n    const board = document.getElementById(\"board\");\n    const rows = Array.from(board.rows);\n    const colorMap = [\n      [\"red\", \"green\", \"blue\"],\n      [\"green\", \"blue\", \"red\"],\n      [\"blue\", \"red\", \"green\"],\n    ];\n    rows.map((tr, i) => {\n      const cols = Array.from(tr.cells);\n      cols.map((cell, j) => {\n        cell.className = colorMap[i][j];\n        return null;\n      });\n      return null;\n    });\n  }\n  play(cell, player) {\n    const clicked = cell.getAttribute(\"clicked\");\n    if (clicked === \"false\") {\n      cell.setAttribute(\"clicked\", \"true\");\n      cell.innerHTML = `<h1>${player}</h1>`;\n      const next = player === \"x\" ? \"o\" : \"x\";\n      this.setState({ player: next });\n    }\n  }\n  cellAssign(player) {\n    const cells = Array.from(document.getElementsByTagName(\"td\"));\n    cells.map((cell, index) => {\n      cell.id = String(index);\n      cell.setAttribute(\"clicked\", \"false\");\n      cell.addEventListener(\"click\", (e) => {\n        this.play(e.target, player);\n      });\n    });\n    return null;\n  }\n  componentDidMount() {\n    this.colorBoard();\n    this.cellAssign(this.state.player);\n  }\n  componentDidUpdate() {\n    this.cellAssign(this.state.player);\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <h1>Tic Tac Toe</h1>\n        <table id=\"board\">\n          <tbody>\n            <tr>\n              <td className=\"cell\"></td>\n              <td className=\"cell\"></td>\n              <td className=\"cell\"></td>\n            </tr>\n            <tr>\n              <td className=\"cell\"></td>\n              <td className=\"cell\"></td>\n              <td className=\"cell\"></td>\n            </tr>\n            <tr>\n              <td className=\"cell\"></td>\n              <td className=\"cell\"></td>\n              <td className=\"cell\"></td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    );\n  }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}